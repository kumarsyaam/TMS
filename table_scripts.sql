
CREATE TABLE TM_VEHICLEDETAILS 
(
  VEH_ID NUMBER NOT NULL 
, VEH_TYPE VARCHAR2(50 BYTE) NOT NULL 
, ENGINE_NO VARCHAR2(50 BYTE) NOT NULL 
, MODEL_NO VARCHAR2(50 BYTE) NOT NULL 
, VEH_NAME VARCHAR2(50 BYTE) NOT NULL 
, VEH_COLOR VARCHAR2(50 BYTE) 
, MANUFACTURER_NAME VARCHAR2(50 BYTE) NOT NULL 
, DATE_OF_MANUFACTURE DATE NOT NULL 
, NO_OF_CYLINDERS NUMBER 
, CUBIC_CAPACITY NUMBER 
, FUEL_USED VARCHAR2(20 BYTE) 
, CONSTRAINT TM_VEHICLEDETAILS_PK PRIMARY KEY 
  (
    VEH_ID 
  )
  ENABLE 
) 
LOGGING 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  MINEXTENTS 1 
  MAXEXTENTS 2147483645 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
);

CREATE TABLE TM_USERMASTER 
(
  USERNAME VARCHAR2(20 BYTE) NOT NULL 
, PASSWORD VARCHAR2(20 BYTE) NOT NULL 
, ROLENAME VARCHAR2(20 BYTE) NOT NULL 
, CONSTRAINT TM_USERMASTER_PK PRIMARY KEY 
  (
    USERNAME 
  )
  ENABLE 
) 
LOGGING 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  MINEXTENTS 1 
  MAXEXTENTS 2147483645 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
);

CREATE TABLE TM_ROLEMASTER 
(
  ROLENAME VARCHAR2(20 BYTE) NOT NULL 
, ROLE_DESC VARCHAR2(100 BYTE) 
, CONSTRAINT TM_ROLEMASTER_PK PRIMARY KEY 
  (
    ROLENAME 
  )
  ENABLE 
) 
LOGGING 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  MINEXTENTS 1 
  MAXEXTENTS 2147483645 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
);

CREATE TABLE TM_REGDETAILS 
(
  APP_NO NUMBER NOT NULL 
, VEH_NO VARCHAR2(20 BYTE) NOT NULL 
, VEH_ID NUMBER 
, OWNER_ID NUMBER 
, DATE_OF_PURCHASE DATE NOT NULL 
, DISTRUBUTER_NAME VARCHAR2(200 BYTE) NOT NULL 
, CONSTRAINT TM_REGDETAILS_PK PRIMARY KEY 
  (
    VEH_NO 
  )
  ENABLE 
) 
LOGGING 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  MINEXTENTS 1 
  MAXEXTENTS 2147483645 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
);

CREATE TABLE TM_OWNERDETAILS 
(
  OWNER_ID NUMBER NOT NULL 
, FNAME VARCHAR2(50 BYTE) NOT NULL 
, LNAME VARCHAR2(50 BYTE) NOT NULL 
, DATEOFBIRTH DATE NOT NULL 
, LANDLINE_NO VARCHAR2(20 BYTE) 
, MOBILE_NO VARCHAR2(15 BYTE) 
, GENDER CHAR(1 BYTE) NOT NULL 
, TEMP_ADDR VARCHAR2(200 BYTE) 
, PERM_ADDR VARCHAR2(200 BYTE) NOT NULL 
, PINCODE NUMBER NOT NULL 
, OCCUPATION VARCHAR2(200 BYTE) 
, PANCARD_NO VARCHAR2(20 BYTE) NOT NULL 
, ADD_PROOF_NAME VARCHAR2(20 BYTE) NOT NULL 
, CONSTRAINT TM_OWNERDETAILS_PK PRIMARY KEY 
  (
    OWNER_ID 
  )
  ENABLE 
) 
LOGGING 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  MINEXTENTS 1 
  MAXEXTENTS 2147483645 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
);

CREATE TABLE TM_OFFENCE_DETAILS 
(
  VEH_NO VARCHAR2(20 BYTE) NOT NULL 
, IMAGE BLOB 
, OFFENCE_DETAIL_ID NUMBER NOT NULL 
, OFFENCE_STATUS VARCHAR2(20 BYTE) 
, OFFENCE_ID NUMBER NOT NULL 
, TIME DATE NOT NULL 
, PLACE VARCHAR2(200 BYTE) NOT NULL 
, REPORTED_BY VARCHAR2(20 BYTE) NOT NULL 
, CONSTRAINT TM_OFFENCE_DETAILS_PK PRIMARY KEY 
  (
    OFFENCE_DETAIL_ID 
  )
  ENABLE 
) 
LOGGING 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  MINEXTENTS 1 
  MAXEXTENTS 2147483645 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
LOB (IMAGE) STORE AS SYS_LOB0000015940C00002$$ 
( 
  ENABLE STORAGE IN ROW 
  CHUNK 8192 
  RETENTION 
  NOCACHE 
  LOGGING 
  STORAGE 
  ( 
    INITIAL 65536 
    MINEXTENTS 1 
    MAXEXTENTS 2147483645 
    FREELISTS 1 
    FREELIST GROUPS 1 
    BUFFER_POOL DEFAULT 
  )  
);

CREATE TABLE TM_OFFENCE 
(
  OFFENCE_ID NUMBER NOT NULL 
, OFFENCE_TYPE VARCHAR2(200 BYTE) NOT NULL 
, PENALTY NUMBER NOT NULL 
, VEH_TYPE VARCHAR2(50 BYTE) NOT NULL 
, CONSTRAINT TM_OFFENCE_PK PRIMARY KEY 
  (
    OFFENCE_ID 
  )
  ENABLE 
) 
LOGGING 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  MINEXTENTS 1 
  MAXEXTENTS 2147483645 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
);

ALTER TABLE TM_VEHICLEDETAILS
ADD CONSTRAINT TM_VEHICLEDETAILS_UK1 UNIQUE 
(
  ENGINE_NO 
)
ENABLE;

ALTER TABLE TM_USERMASTER
ADD CONSTRAINT TM_USERMASTER_TM_ROLEMAST_FK1 FOREIGN KEY
(
  ROLENAME 
)
REFERENCES TM_ROLEMASTER
(
  ROLENAME 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE TM_REGDETAILS
ADD CONSTRAINT TM_REGDETAILS_TM_OWNERDET_FK1 FOREIGN KEY
(
  OWNER_ID 
)
REFERENCES TM_OWNERDETAILS
(
  OWNER_ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE TM_REGDETAILS
ADD CONSTRAINT TM_REGDETAILS_TM_VEHICLED_FK1 FOREIGN KEY
(
  VEH_ID 
)
REFERENCES TM_VEHICLEDETAILS
(
  VEH_ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE TM_OFFENCE_DETAILS
ADD CONSTRAINT OFFENCE_DETAILS_TM_OFFENC_FK1 FOREIGN KEY
(
  OFFENCE_ID 
)
REFERENCES TM_OFFENCE
(
  OFFENCE_ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE TM_OFFENCE_DETAILS
ADD CONSTRAINT TM_OFFENCE_DETAILS_TM_REG_FK1 FOREIGN KEY
(
  VEH_NO 
)
REFERENCES TM_REGDETAILS
(
  VEH_NO 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE TM_OFFENCE_DETAILS
ADD CONSTRAINT TM_OFFENCE_DETAILS_TM_USE_FK1 FOREIGN KEY
(
  REPORTED_BY 
)
REFERENCES TM_USERMASTER
(
  USERNAME 
)
ENABLE;

CREATE SEQUENCE TM_VEH_ID_SEQ INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE TM_OWNER_ID_SEQ INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE TM_OFFENCE_ID_SEQ INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE TM_OFFENCE_DETAIL_ID_SEQ INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20 ORDER;

CREATE TRIGGER TM_VEHICLEDETAILS_TRG BEFORE INSERT ON TM_VEHICLEDETAILS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.VEH_ID IS NULL THEN
      SELECT TM_VEH_ID_SEQ.NEXTVAL INTO :NEW.VEH_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER TM_OWNERDETAILS_TRG BEFORE INSERT ON TM_OWNERDETAILS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.OWNER_ID IS NULL THEN
      SELECT TM_OWNER_ID_SEQ.NEXTVAL INTO :NEW.OWNER_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER TM_OFFENCE_TRG BEFORE INSERT ON TM_OFFENCE
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.OFFENCE_ID IS NULL THEN
      SELECT TM_OFFENCE_ID_SEQ.NEXTVAL INTO :NEW.OFFENCE_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER TM_OFFENCE_DETAIL_ID_TRG BEFORE INSERT ON TM_OFFENCE_DETAILS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.OFFENCE_DETAIL_ID IS NULL THEN
      SELECT TM_OFFENCE_DETAIL_ID_SEQ.NEXTVAL INTO :NEW.OFFENCE_DETAIL_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
